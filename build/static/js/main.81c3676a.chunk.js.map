{"version":3,"sources":["AppStyles.js","components/header/HeaderStyles.js","components/header/Header.js","components/content/ContentStyles.js","components/resources/bald-eagle-preloaded-v2.jpg","components/content/Results.js","components/resources/bald-eagle-preloaded-with-text.jpg","components/content/SelectImage.js","components/resources/classes.js","components/content/Content.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["PageWrap","styled","div","HeaderWrap","Header","ContentWrap","Results","classifications","style","backgroundColor","textAlign","display","flexDirection","justifyContent","alignItems","PieChart","width","height","onClick","Pie","dataKey","isAnimationActive","data","cx","cy","outerRadius","fill","label","midAngle","innerRadius","value","index","RADIAN","Math","PI","radius","x","cos","y","sin","textAnchor","dominantBaseline","name","Label","offset","position","Tooltip","alignSelf","color","SelectImage","props","useState","preloadedImg","image","setImage","cropper","setCropper","fileInput","useRef","initialAspectRatio","src","viewMode","guides","minCropBoxHeight","minCropBoxWidth","responsive","background","autoCropArea","checkOrientation","onInitialized","instance","ref","type","onChange","e","files","preventDefault","dataTransfer","target","reader","FileReader","onload","result","readAsDataURL","id","className","setSelectImage","current","click","alert","setImgSrc","getCroppedCanvas","toDataURL","classes","Content","setClassifications","renderResults","setRenderResults","selectImage","preloadedImgSrc","imgSrc","model","setModel","modelDir","classesSpecies","Object","keys","saveModel","a","save","tf","window","indexedDB","rescaleImage","expandDims","toFloat","sub","resizeImage","resizeBilinear","setThreeBestPredictions","probabilities","mapProbabilitiesToSpecies","i","length","push","species","prediction","highest","indexOf","max","secondHighest","thirdHighest","newClassifications","console","log","useEffect","loadModel","classify","Image","img","fromPixels","resizedImage","batchedImage","predict","App","document","title","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.81c3676a.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const PageWrap = styled.div`\r\n\tfont-size: 10px;   /*1rem = 10px*/\r\n  background-color: #FAFAFF;\r\n  min-height:100vh;\r\n  max-width: 100%;\r\n  overflow-x: hidden;\r\n\r\n  color: #273469; \r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const HeaderWrap = styled.div`\r\n  padding: 1.4rem 0;\r\n  align-self: center;\r\n  flex-shrink: 2;\r\n  @media(min-width: 1024px) {\r\n    align-self: auto;\r\n  }\r\n\r\n  h1 {\r\n    margin-left: 1.4rem;\r\n    font-size: 2rem;\r\n    \r\n  }\r\n`;","import React from 'react';\r\nimport { HeaderWrap } from './HeaderStyles';\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n    <HeaderWrap>\r\n      <h1>PWA Birdifier</h1>\r\n    </HeaderWrap>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nexport const ContentWrap = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100%;\r\n  width: 100%;\r\n\r\n  div {\r\n    flex: 1;\r\n  }\r\n\r\n  @media(min-width: 1024px) {\r\n    width: 40rem;\r\n    margin:0 auto;\r\n  }\r\n\r\n  .currentImage {\r\n    display: flex;\r\n  }\r\n\r\n  .currentImage img {\r\n    height: auto;\r\n    width: 100%;\r\n    align-self: flex-end;\r\n  }\r\n\r\n  .btn-group {\r\n    flex-grow: 0;\r\n  }\r\n\r\n  .btn-group button {\r\n    width: 33.3%;\r\n    border: 1px solid #FAFAFF;\r\n    padding: 15px 24px; \r\n    @media(max-width: 350px) {\r\n      padding: 10px 10px;\r\n    }\r\n  }\r\n\r\n  .btn-group button:not(:last-child) {\r\n    border-right: none;\r\n  }\r\n\r\n  button, input > button {\r\n    background-color: #8884d8;\r\n    cursor: pointer;\r\n    color: #FAFAFF;\r\n    font-family: inherit;\r\n  }\r\n`;","export default __webpack_public_path__ + \"static/media/bald-eagle-preloaded-v2.8155ad7c.jpg\";","\r\nimport React  from 'react';\r\nimport { PieChart, Pie, Tooltip, Label } from 'recharts';\r\n\r\nfunction Results({ classifications }) {\r\n  const resultStyle = {\r\n    backgroundColor: '#273469',   \r\n    textAlign: 'center',\r\n    display: 'flex',\r\n    flexDirection:' column',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center'\r\n  };\r\n\r\n  const h2Style = {\r\n    alignSelf: 'center',\r\n    color: '#FAFAFF',\r\n  };\r\n  \r\n  return (\r\n    <div style={resultStyle}>\r\n      <PieChart width={400} height={400} onClick={() => {}}>\r\n      <Pie\r\n      dataKey=\"value\"\r\n      isAnimationActive={true}\r\n      data={classifications}\r\n      cx={200}\r\n      cy={200}\r\n      outerRadius={65}\r\n      fill=\"#8884d8\"\r\n      label={({\r\n          cx,\r\n          cy,\r\n          midAngle,\r\n          innerRadius,\r\n          outerRadius,\r\n          value,\r\n          index\r\n        }) => {\r\n          const RADIAN = Math.PI / 180;\r\n          // eslint-disable-next-line\r\n          const radius = 25 + innerRadius + (outerRadius - innerRadius);\r\n          // eslint-disable-next-line\r\n          const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n          // eslint-disable-next-line\r\n          const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n          return (\r\n            <text\r\n              x={x}\r\n              y={y}\r\n              fill=\"#8884d8\"\r\n              textAnchor={x > cx ? \"start\" : \"end\"}\r\n              dominantBaseline=\"central\"\r\n            >\r\n              {classifications[index].name} ({value})\r\n            </text>\r\n          );\r\n        }}\r\n      />\r\n      <Label value=\"Detection confidence / %\" offset={0} position=\"insideBottom\" />\r\n      <Tooltip />\r\n      </PieChart>\r\n      <h2 style={h2Style}>Detection confidence / %</h2>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Results;","export default __webpack_public_path__ + \"static/media/bald-eagle-preloaded-with-text.6e8412b5.jpg\";","import React, { useState, useRef } from \"react\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport preloadedImg from '../resources/bald-eagle-preloaded-with-text.jpg';\r\n\r\nfunction SelectImage(props) {\r\n  const [image, setImage] = useState(preloadedImg);\r\n  const [cropper, setCropper] = useState();\r\n  const fileInput = useRef(null);\r\n\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    let files;\r\n    if (e.dataTransfer) {\r\n      files = e.dataTransfer.files;\r\n    } else if (e.target) {\r\n      files = e.target.files;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      setImage(reader.result);\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n  };\r\n\r\n  const getCropData = () => {\r\n    if (image === '/static/media/bald-eagle-preloaded-with-text.6e8412b5.jpg') {\r\n      alert(\"Preloaded image cannot be cropped\");\r\n    } else if (typeof cropper !== \"undefined\") {\r\n      props.setImgSrc(cropper.getCroppedCanvas().toDataURL());\r\n      props.setSelectImage(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n      <Cropper\r\n        style={{ alignSelf: 'flex-end', width: \"100%\"}}\r\n        initialAspectRatio={1}\r\n        src={image}\r\n        viewMode={1}\r\n        guides={true}\r\n        minCropBoxHeight={10}\r\n        minCropBoxWidth={10}\r\n        responsive={true}\r\n        background={false}\r\n        autoCropArea={1}\r\n        checkOrientation={false}\r\n        onInitialized={(instance) => {\r\n        setCropper(instance);\r\n        }}\r\n      />\r\n      <input style={{ display: 'none' }} ref={fileInput} type=\"file\" onChange={onChange} />\r\n      <div id=\"crop\" className=\"btn-group\">\r\n      <button onClick={() => props.setSelectImage(false)}>Cancel</button>\r\n      <button\r\n        onClick={() => fileInput.current.click()}\r\n      >Browse</button>\r\n        <button onClick={() => getCropData()}>Crop</button>\r\n      </div>\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nexport default SelectImage;\r\n","export const classes = {\r\n  'AFRICAN CROWNED CRANE': 0,\r\n  'AFRICAN FIREFINCH': 1,\r\n  'ALBATROSS': 2,\r\n  'ALEXANDRINE PARAKEET': 3,\r\n  'AMERICAN AVOCET': 4,\r\n  'AMERICAN BITTERN': 5,\r\n  'AMERICAN COOT': 6,\r\n  'AMERICAN GOLDFINCH': 7,\r\n  'AMERICAN KESTREL': 8,\r\n  'AMERICAN PIPIT': 9,\r\n  'AMERICAN REDSTART': 10,\r\n  'ANHINGA': 11,\r\n  'ANNAS HUMMINGBIRD': 12,\r\n  'ANTBIRD': 13,\r\n  'ARARIPE MANAKIN': 14,\r\n  'ASIAN CRESTED IBIS': 15,\r\n  'BALD EAGLE': 16,\r\n  'BALI STARLING': 17,\r\n  'BALTIMORE ORIOLE': 18,\r\n  'BANANAQUIT': 19,\r\n  'BANDED BROADBILL': 20,\r\n  'BAR-TAILED GODWIT': 21,\r\n  'BARN OWL': 22,\r\n  'BARN SWALLOW': 23,\r\n  'BARRED PUFFBIRD': 24,\r\n  'BAY-BREASTED WARBLER': 25,\r\n  'BEARDED BARBET': 26,\r\n  'BELTED KINGFISHER': 27,\r\n  'BIRD OF PARADISE': 28,\r\n  'BLACK FRANCOLIN': 29,\r\n  'BLACK SKIMMER': 30,\r\n  'BLACK SWAN': 31,\r\n  'BLACK THROATED WARBLER': 32,\r\n  'BLACK VULTURE': 33,\r\n  'BLACK-CAPPED CHICKADEE': 34,\r\n  'BLACK-NECKED GREBE': 35,\r\n  'BLACK-THROATED SPARROW': 36,\r\n  'BLACKBURNIAM WARBLER': 37,\r\n  'BLUE GROUSE': 38,\r\n  'BLUE HERON': 39,\r\n  'BOBOLINK': 40,\r\n  'BROWN NOODY': 41,\r\n  'BROWN THRASHER': 42,\r\n  'CACTUS WREN': 43,\r\n  'CALIFORNIA CONDOR': 44,\r\n  'CALIFORNIA GULL': 45,\r\n  'CALIFORNIA QUAIL': 46,\r\n  'CANARY': 47,\r\n  'CAPE MAY WARBLER': 48,\r\n  'CAPUCHINBIRD': 49,\r\n  'CARMINE BEE-EATER': 50,\r\n  'CASPIAN TERN': 51,\r\n  'CASSOWARY': 52,\r\n  'CHARA DE COLLAR': 53,\r\n  'CHIPPING SPARROW': 54,\r\n  'CHUKAR PARTRIDGE': 55,\r\n  'CINNAMON TEAL': 56,\r\n  'COCK OF THE  ROCK': 57,\r\n  'COCKATOO': 58,\r\n  'COMMON FIRECREST': 59,\r\n  'COMMON GRACKLE': 60,\r\n  'COMMON HOUSE MARTIN': 61,\r\n  'COMMON LOON': 62,\r\n  'COMMON POORWILL': 63,\r\n  'COMMON STARLING': 64,\r\n  'COUCHS KINGBIRD': 65,\r\n  'CRESTED AUKLET': 66,\r\n  'CRESTED CARACARA': 67,\r\n  'CRESTED NUTHATCH': 68,\r\n  'CROW': 69,\r\n  'CROWNED PIGEON': 70,\r\n  'CUBAN TODY': 71,\r\n  'CURL CRESTED ARACURI': 72,\r\n  'D-ARNAUDS BARBET': 73,\r\n  'DARK EYED JUNCO': 74,\r\n  'DOWNY WOODPECKER': 75,\r\n  'EASTERN BLUEBIRD': 76,\r\n  'EASTERN MEADOWLARK': 77,\r\n  'EASTERN ROSELLA': 78,\r\n  'EASTERN TOWEE': 79,\r\n  'ELEGANT TROGON': 80,\r\n  'ELLIOTS  PHEASANT': 81,\r\n  'EMPEROR PENGUIN': 82,\r\n  'EMU': 83,\r\n  'EURASIAN GOLDEN ORIOLE': 84,\r\n  'EURASIAN MAGPIE': 85,\r\n  'EVENING GROSBEAK': 86,\r\n  'FIRE TAILLED MYZORNIS': 87,\r\n  'FLAME TANAGER': 88,\r\n  'FLAMINGO': 89,\r\n  'FRIGATE': 90,\r\n  'GAMBELS QUAIL': 91,\r\n  'GILA WOODPECKER': 92,\r\n  'GILDED FLICKER': 93,\r\n  'GLOSSY IBIS': 94,\r\n  'GO AWAY BIRD': 95,\r\n  'GOLD WING WARBLER': 96,\r\n  'GOLDEN CHEEKED WARBLER': 97,\r\n  'GOLDEN CHLOROPHONIA': 98,\r\n  'GOLDEN EAGLE': 99,\r\n  'GOLDEN PHEASANT': 100,\r\n  'GOLDEN PIPIT': 101,\r\n  'GOULDIAN FINCH': 102,\r\n  'GRAY CATBIRD': 103,\r\n  'GRAY PARTRIDGE': 104,\r\n  'GREAT POTOO': 105,\r\n  'GREATOR SAGE GROUSE': 106,\r\n  'GREEN JAY': 107,\r\n  'GREY PLOVER': 108,\r\n  'GUINEA TURACO': 109,\r\n  'GUINEAFOWL': 110,\r\n  'GYRFALCON': 111,\r\n  'HARPY EAGLE': 112,\r\n  'HAWAIIAN GOOSE': 113,\r\n  'HELMET VANGA': 114,\r\n  'HOATZIN': 115,\r\n  'HOODED MERGANSER': 116,\r\n  'HOOPOES': 117,\r\n  'HORNBILL': 118,\r\n  'HORNED GUAN': 119,\r\n  'HORNED SUNGEM': 120,\r\n  'HOUSE FINCH': 121,\r\n  'HOUSE SPARROW': 122,\r\n  'IMPERIAL SHAQ': 123,\r\n  'INCA TERN': 124,\r\n  'INDIAN BUSTARD': 125,\r\n  'INDIAN PITTA': 126,\r\n  'INDIGO BUNTING': 127,\r\n  'JABIRU': 128,\r\n  'JAVA SPARROW': 129,\r\n  'JAVAN MAGPIE': 130,\r\n  'KAKAPO': 131,\r\n  'KILLDEAR': 132,\r\n  'KING VULTURE': 133,\r\n  'KIWI': 134,\r\n  'KOOKABURRA': 135,\r\n  'LARK BUNTING': 136,\r\n  'LEARS MACAW': 137,\r\n  'LILAC ROLLER': 138,\r\n  'LONG-EARED OWL': 139,\r\n  'MALABAR HORNBILL': 140,\r\n  'MALACHITE KINGFISHER': 141,\r\n  'MALEO': 142,\r\n  'MALLARD DUCK': 143,\r\n  'MANDRIN DUCK': 144,\r\n  'MARABOU STORK': 145,\r\n  'MASKED BOOBY': 146,\r\n  'MASKED LAPWING': 147,\r\n  'MIKADO  PHEASANT': 148,\r\n  'MOURNING DOVE': 149,\r\n  'MYNA': 150,\r\n  'NICOBAR PIGEON': 151,\r\n  'NORTHERN BALD IBIS': 152,\r\n  'NORTHERN CARDINAL': 153,\r\n  'NORTHERN FLICKER': 154,\r\n  'NORTHERN GANNET': 155,\r\n  'NORTHERN GOSHAWK': 156,\r\n  'NORTHERN JACANA': 157,\r\n  'NORTHERN MOCKINGBIRD': 158,\r\n  'NORTHERN PARULA': 159,\r\n  'NORTHERN RED BISHOP': 160,\r\n  'OCELLATED TURKEY': 161,\r\n  'OKINAWA RAIL': 162,\r\n  'OSPREY': 163,\r\n  'OSTRICH': 164,\r\n  'OYSTER CATCHER': 165,\r\n  'PAINTED BUNTIG': 166,\r\n  'PALILA': 167,\r\n  'PARADISE TANAGER': 168,\r\n  'PARUS MAJOR': 169,\r\n  'PEACOCK': 170,\r\n  'PELICAN': 171,\r\n  'PEREGRINE FALCON': 172,\r\n  'PHILIPPINE EAGLE': 173,\r\n  'PINK ROBIN': 174,\r\n  'PUFFIN': 175,\r\n  'PURPLE FINCH': 176,\r\n  'PURPLE GALLINULE': 177,\r\n  'PURPLE MARTIN': 178,\r\n  'PURPLE SWAMPHEN': 179,\r\n  'QUETZAL': 180,\r\n  'RAINBOW LORIKEET': 181,\r\n  'RAZORBILL': 182,\r\n  'RED BEARDED BEE EATER': 183,\r\n  'RED BELLIED PITTA': 184,\r\n  'RED FACED CORMORANT': 185,\r\n  'RED FACED WARBLER': 186,\r\n  'RED HEADED DUCK': 187,\r\n  'RED HEADED WOODPECKER': 188,\r\n  'RED HONEY CREEPER': 189,\r\n  'RED WINGED BLACKBIRD': 190,\r\n  'RED WISKERED BULBUL': 191,\r\n  'RING-NECKED PHEASANT': 192,\r\n  'ROADRUNNER': 193,\r\n  'ROBIN': 194,\r\n  'ROCK DOVE': 195,\r\n  'ROSY FACED LOVEBIRD': 196,\r\n  'ROUGH LEG BUZZARD': 197,\r\n  'RUBY THROATED HUMMINGBIRD': 198,\r\n  'RUFOUS KINGFISHER': 199,\r\n  'RUFUOS MOTMOT': 200,\r\n  'SAMATRAN THRUSH': 201,\r\n  'SAND MARTIN': 202,\r\n  'SCARLET IBIS': 203,\r\n  'SCARLET MACAW': 204,\r\n  'SHOEBILL': 205,\r\n  'SHORT BILLED DOWITCHER': 206,\r\n  'SMITHS LONGSPUR': 207,\r\n  'SNOWY EGRET': 208,\r\n  'SNOWY OWL': 209,\r\n  'SORA': 210,\r\n  'SPANGLED COTINGA': 211,\r\n  'SPLENDID WREN': 212,\r\n  'SPOON BILED SANDPIPER': 213,\r\n  'SPOONBILL': 214,\r\n  'SRI LANKA BLUE MAGPIE': 215,\r\n  'STEAMER DUCK': 216,\r\n  'STORK BILLED KINGFISHER': 217,\r\n  'STRAWBERRY FINCH': 218,\r\n  'STRIPPED SWALLOW': 219,\r\n  'SUPERB STARLING': 220,\r\n  'SWINHOES PHEASANT': 221,\r\n  'TAIWAN MAGPIE': 222,\r\n  'TAKAHE': 223,\r\n  'TASMANIAN HEN': 224,\r\n  'TEAL DUCK': 225,\r\n  'TIT MOUSE': 226,\r\n  'TOUCHAN': 227,\r\n  'TOWNSENDS WARBLER': 228,\r\n  'TREE SWALLOW': 229,\r\n  'TRUMPTER SWAN': 230,\r\n  'TURKEY VULTURE': 231,\r\n  'TURQUOISE MOTMOT': 232,\r\n  'UMBRELLA BIRD': 233,\r\n  'VARIED THRUSH': 234,\r\n  'VENEZUELIAN TROUPIAL': 235,\r\n  'VERMILION FLYCATHER': 236,\r\n  'VIOLET GREEN SWALLOW': 237,\r\n  'VULTURINE GUINEAFOWL': 238,\r\n  'WATTLED CURASSOW': 239,\r\n  'WHIMBREL': 240,\r\n  'WHITE CHEEKED TURACO': 241,\r\n  'WHITE NECKED RAVEN': 242,\r\n  'WHITE TAILED TROPIC': 243,\r\n  'WILD TURKEY': 244,\r\n  'WILSONS BIRD OF PARADISE': 245,\r\n  'WOOD DUCK': 246,\r\n  'YELLOW BELLIED FLOWERPECKER': 247,\r\n  'YELLOW CACIQUE': 248,\r\n  'YELLOW HEADED BLACKBIRD': 249\r\n};","import React, { useState, useEffect } from 'react';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport { ContentWrap } from './ContentStyles';\r\nimport preloadedImgSrc from '../resources/bald-eagle-preloaded-v2.jpg';\r\nimport Results from './Results';\r\nimport SelectImage from './SelectImage';\r\nimport { classes } from '../resources/classes'\r\n\r\nfunction Content() {\r\n  const [classifications, setClassifications] = useState([\r\n    { name:  'Bald Eagle', value: 90 },\r\n    { name:  'Golden Eagle', value: 7 },\r\n    { name:  'Turkey Vulture', value: 3 },\r\n  ]);\r\n  const [renderResults, setRenderResults] = useState(false);\r\n  const [selectImage, setSelectImage] = useState(false);\r\n  const [imgSrc, setImgSrc] = useState(preloadedImgSrc);\r\n  const [model, setModel] = useState(null);\r\n  const modelDir = '/tfjs_files/model.json';\r\n  const pixelHeight = 224, pixelWidth = 224;\r\n  const classesSpecies = Object.keys(classes);\r\n\r\n  async function saveModel(model) {\r\n    if (model) {\r\n      await model.save('indexeddb://my-model');\r\n    }\r\n  }\r\n\r\n  async function loadModel() {\r\n    try {\r\n      setModel(await tf.loadLayersModel('indexeddb://my-model'));\r\n    } catch (error) {\r\n    } finally {\r\n      setModel(await tf.loadLayersModel(modelDir));\r\n      if (window.indexedDB ) {\r\n        saveModel(model)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadModel();\r\n  }, []);\r\n\r\n  function rescaleImage(image) {\r\n    return image.expandDims(0).toFloat().div(127).sub(1);\r\n  }\r\n\r\n  function resizeImage(image) {\r\n    return tf.image.resizeBilinear(image, [pixelHeight, pixelWidth]);\r\n  }\r\n\r\n  function setThreeBestPredictions(probabilities) {\r\n    const mapProbabilitiesToSpecies = [];\r\n    for (let i = 0; i < probabilities.length; i++) {\r\n      mapProbabilitiesToSpecies.push({\r\n        species: classesSpecies[i],\r\n        prediction: probabilities[i]\r\n      })\r\n    };\r\n    \r\n    const highest = probabilities.indexOf(Math.max(...probabilities));\r\n    probabilities[highest] = 0;\r\n    const secondHighest = probabilities.indexOf(Math.max(...probabilities));\r\n    probabilities[secondHighest] = 0;\r\n    const thirdHighest = probabilities.indexOf(Math.max(...probabilities));\r\n    \r\n    const newClassifications = [\r\n      {\r\n        name: mapProbabilitiesToSpecies[highest].species,\r\n        value: mapProbabilitiesToSpecies[highest].prediction * 100\r\n      },\r\n      {\r\n        name: mapProbabilitiesToSpecies[secondHighest].species,\r\n        value: mapProbabilitiesToSpecies[secondHighest].prediction * 100\r\n      },\r\n      {\r\n        name: mapProbabilitiesToSpecies[thirdHighest].species,\r\n        value: mapProbabilitiesToSpecies[thirdHighest].prediction * 100\r\n      },\r\n    ];\r\n    console.log(newClassifications);\r\n    setClassifications(newClassifications);\r\n  }\r\n\r\n  const classify = async() => {\r\n    if (selectImage === false) {\r\n      const image = new Image();\r\n      image.src = imgSrc;\r\n      const img = tf.browser.fromPixels(image);\r\n      const resizedImage = resizeImage(img);\r\n      const batchedImage = rescaleImage(resizedImage);\r\n      const predict = model.predict(batchedImage);\r\n      const probabilities = await predict.data();\r\n      setThreeBestPredictions(probabilities);\r\n      setRenderResults(true);\r\n    }\r\n  };\r\n\r\n  const selectImageOnClick = () => {\r\n    if (renderResults) {\r\n      setRenderResults(false);\r\n    }\r\n    return setSelectImage(true);\r\n  }\r\n\r\n  return (\r\n    <ContentWrap>\r\n      {renderResults === true ?\r\n        <Results classifications={classifications}/>\r\n      : null}\r\n      {selectImage === true ?\r\n        <SelectImage setSelectImage={setSelectImage} setImgSrc={setImgSrc}/>\r\n      : <div className=\"currentImage\">\r\n          <img src={imgSrc}></img>\r\n        </div>}\r\n      <div className=\"btn-group\">\r\n        <button onClick={() => selectImageOnClick()}>Select file</button>\r\n        <button onClick={() => setRenderResults(false)}>Take photo</button>\r\n        <button onClick={() => classify()}>Classify</button>\r\n      </div>\r\n    </ContentWrap>\r\n  );\r\n}\r\n\r\nexport default Content;","import React, { useEffect } from 'react';\r\nimport { PageWrap } from './AppStyles';\r\nimport Header from './components/header/Header';\r\nimport Content from './components/content/Content';\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    document.title = \"PWA Birdifier\"\r\n  }, []);\r\n\r\n  return (\r\n    <PageWrap>\r\n      <Header/>\r\n      <Content/>\r\n    </PageWrap>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}