{"version":3,"sources":["AppStyles.js","components/header/HeaderStyles.js","components/header/Header.js","components/content/ContentStyles.js","components/resources/bald-eagle-preloaded-v2.jpg","components/content/ResultsStyles.js","components/content/Results.js","components/resources/bald-eagle-preloaded-with-text.jpg","components/content/SelectImage.js","components/resources/classes.js","components/content/Content.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["PageWrap","styled","div","HeaderWrap","Header","ContentWrap","Results","classifications","setRenderResults","name","Math","round","value","Number","EPSILON","class","onClick","SelectImage","props","useState","preloadedImg","image","setImage","cropper","setCropper","fileInput","useRef","style","display","flexDirection","alignSelf","minWidth","maxHeight","width","height","initialAspectRatio","src","viewMode","guides","minCropBoxHeight","minCropBoxWidth","responsive","background","autoCropArea","checkOrientation","onInitialized","instance","ref","type","onChange","e","files","preventDefault","dataTransfer","target","reader","FileReader","onload","result","readAsDataURL","err","alert","id","className","setSelectImage","current","click","setImgSrc","getCroppedCanvas","toDataURL","classes","Content","setClassifications","renderResults","selectImage","preloadedImgSrc","imgSrc","model","setModel","modelDir","classesSpecies","Object","keys","saveModel","a","save","tf","window","indexedDB","rescaleImage","expandDims","toFloat","sub","resizeImage","resizeBilinear","setThreeBestPredictions","probabilities","mapProbabilitiesToSpecies","i","length","push","species","prediction","highest","indexOf","max","secondHighest","thirdHighest","newClassifications","useEffect","loadModel","classify","Image","img","fromPixels","resizedImage","batchedImage","predict","data","App","document","title","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"2TAEaA,EAAWC,IAAOC,IAAV,6WCARC,EAAaF,IAAOC,IAAV,4N,QCURE,I,IAAAA,EATf,WAEE,OACE,cAACD,EAAD,UACE,kD,gDCLOE,EAAcJ,IAAOC,IAAV,q4BCFT,MAA0B,oDCE5BG,EAAcJ,IAAOC,IAAV,seCmCTI,MAjCf,YAAyD,IAAtCC,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,iBAClC,OACE,eAAC,EAAD,WACI,yCACA,kCACE,gCACE,+BACE,yCACA,+DAGJ,kCACE,+BACE,6BAAKD,EAAgB,GAAGE,OACxB,6BAAKC,KAAKC,MAAoD,KAA7CJ,EAAgB,GAAGK,MAAQC,OAAOC,UAAkB,SAEvE,+BACE,6BAAKP,EAAgB,GAAGE,OACxB,6BAAKC,KAAKC,MAAoD,KAA7CJ,EAAgB,GAAGK,MAAQC,OAAOC,UAAkB,SAEvE,+BACE,6BAAKP,EAAgB,GAAGE,OACxB,6BAAKC,KAAKC,MAAoD,KAA7CJ,EAAgB,GAAGK,MAAQC,OAAOC,UAAkB,eAI3E,qBAAKC,MAAM,WAAX,SACE,wBAAQC,QAAS,kBAAMR,GAAiB,IAAxC,yB,SC/BK,G,OAAA,IAA0B,4DCqE1BS,MAhEf,SAAqBC,GAAQ,IAAD,EACAC,mBAASC,GADT,mBACnBC,EADmB,KACZC,EADY,OAEIH,qBAFJ,mBAEnBI,EAFmB,KAEVC,EAFU,KAGpBC,EAAYC,iBAAO,MA8BzB,OACE,sBAAKC,MAAO,CAAEC,QAAS,OAAQC,cAAe,UAA9C,UACE,cAAC,IAAD,CACEF,MAAO,CAAEG,UAAW,WAAYC,SAAU,OAAQC,UAAW,QAASC,MAAO,OAAQC,OAAQ,QAC7FC,mBAAoB,EACpBC,IAAKf,EACLgB,SAAU,EACVC,QAAQ,EACRC,iBAAkB,GAClBC,gBAAiB,GACjBC,YAAY,EACZC,YAAY,EACZC,aAAc,EACdC,kBAAkB,EAClBC,cAAe,SAACC,GAChBtB,EAAWsB,MAGb,uBAAOnB,MAAO,CAAEC,QAAS,QAAUmB,IAAKtB,EAAWuB,KAAK,OAAOC,SA9ClD,SAACC,GAEhB,IAAIC,EADJD,EAAEE,iBAEEF,EAAEG,aACJF,EAAQD,EAAEG,aAAaF,MACdD,EAAEI,SACXH,EAAQD,EAAEI,OAAOH,OAEnB,IAAMI,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACdnC,EAASiC,EAAOG,SAElB,IACEH,EAAOI,cAAcR,EAAM,IAC3B,MAAOS,GACPC,MAAM,sDAgCN,sBAAKC,GAAG,OAAOC,UAAU,YAAzB,UACA,wBAAQ/C,QAAS,kBAAME,EAAM8C,gBAAe,IAA5C,oBACA,wBACEhD,QAAS,kBAAMS,EAAUwC,QAAQC,SADnC,oBAGE,wBAAQlD,QAAS,WAhCP,8DAAVK,EACFwC,MAAM,qCACsB,qBAAZtC,IAChBL,EAAMiD,UAAU5C,EAAQ6C,mBAAmBC,aAC3CnD,EAAM8C,gBAAe,KA4BnB,yBC9DKM,EAAU,CACrB,wBAAyB,EACzB,oBAAqB,EACrB,UAAa,EACb,uBAAwB,EACxB,kBAAmB,EACnB,mBAAoB,EACpB,gBAAiB,EACjB,qBAAsB,EACtB,mBAAoB,EACpB,iBAAkB,EAClB,oBAAqB,GACrB,QAAW,GACX,oBAAqB,GACrB,QAAW,GACX,kBAAmB,GACnB,qBAAsB,GACtB,aAAc,GACd,gBAAiB,GACjB,mBAAoB,GACpB,WAAc,GACd,mBAAoB,GACpB,oBAAqB,GACrB,WAAY,GACZ,eAAgB,GAChB,kBAAmB,GACnB,uBAAwB,GACxB,iBAAkB,GAClB,oBAAqB,GACrB,mBAAoB,GACpB,kBAAmB,GACnB,gBAAiB,GACjB,aAAc,GACd,yBAA0B,GAC1B,gBAAiB,GACjB,yBAA0B,GAC1B,qBAAsB,GACtB,yBAA0B,GAC1B,uBAAwB,GACxB,cAAe,GACf,aAAc,GACd,SAAY,GACZ,cAAe,GACf,iBAAkB,GAClB,cAAe,GACf,oBAAqB,GACrB,kBAAmB,GACnB,mBAAoB,GACpB,OAAU,GACV,mBAAoB,GACpB,aAAgB,GAChB,oBAAqB,GACrB,eAAgB,GAChB,UAAa,GACb,kBAAmB,GACnB,mBAAoB,GACpB,mBAAoB,GACpB,gBAAiB,GACjB,oBAAqB,GACrB,SAAY,GACZ,mBAAoB,GACpB,iBAAkB,GAClB,sBAAuB,GACvB,cAAe,GACf,kBAAmB,GACnB,kBAAmB,GACnB,kBAAmB,GACnB,iBAAkB,GAClB,mBAAoB,GACpB,mBAAoB,GACpB,KAAQ,GACR,iBAAkB,GAClB,aAAc,GACd,uBAAwB,GACxB,mBAAoB,GACpB,kBAAmB,GACnB,mBAAoB,GACpB,mBAAoB,GACpB,qBAAsB,GACtB,kBAAmB,GACnB,gBAAiB,GACjB,iBAAkB,GAClB,oBAAqB,GACrB,kBAAmB,GACnB,IAAO,GACP,yBAA0B,GAC1B,kBAAmB,GACnB,mBAAoB,GACpB,wBAAyB,GACzB,gBAAiB,GACjB,SAAY,GACZ,QAAW,GACX,gBAAiB,GACjB,kBAAmB,GACnB,iBAAkB,GAClB,cAAe,GACf,eAAgB,GAChB,oBAAqB,GACrB,yBAA0B,GAC1B,sBAAuB,GACvB,eAAgB,GAChB,kBAAmB,IACnB,eAAgB,IAChB,iBAAkB,IAClB,eAAgB,IAChB,iBAAkB,IAClB,cAAe,IACf,sBAAuB,IACvB,YAAa,IACb,cAAe,IACf,gBAAiB,IACjB,WAAc,IACd,UAAa,IACb,cAAe,IACf,iBAAkB,IAClB,eAAgB,IAChB,QAAW,IACX,mBAAoB,IACpB,QAAW,IACX,SAAY,IACZ,cAAe,IACf,gBAAiB,IACjB,cAAe,IACf,gBAAiB,IACjB,gBAAiB,IACjB,YAAa,IACb,iBAAkB,IAClB,eAAgB,IAChB,iBAAkB,IAClB,OAAU,IACV,eAAgB,IAChB,eAAgB,IAChB,OAAU,IACV,SAAY,IACZ,eAAgB,IAChB,KAAQ,IACR,WAAc,IACd,eAAgB,IAChB,cAAe,IACf,eAAgB,IAChB,iBAAkB,IAClB,mBAAoB,IACpB,uBAAwB,IACxB,MAAS,IACT,eAAgB,IAChB,eAAgB,IAChB,gBAAiB,IACjB,eAAgB,IAChB,iBAAkB,IAClB,mBAAoB,IACpB,gBAAiB,IACjB,KAAQ,IACR,iBAAkB,IAClB,qBAAsB,IACtB,oBAAqB,IACrB,mBAAoB,IACpB,kBAAmB,IACnB,mBAAoB,IACpB,kBAAmB,IACnB,uBAAwB,IACxB,kBAAmB,IACnB,sBAAuB,IACvB,mBAAoB,IACpB,eAAgB,IAChB,OAAU,IACV,QAAW,IACX,iBAAkB,IAClB,iBAAkB,IAClB,OAAU,IACV,mBAAoB,IACpB,cAAe,IACf,QAAW,IACX,QAAW,IACX,mBAAoB,IACpB,mBAAoB,IACpB,aAAc,IACd,OAAU,IACV,eAAgB,IAChB,mBAAoB,IACpB,gBAAiB,IACjB,kBAAmB,IACnB,QAAW,IACX,mBAAoB,IACpB,UAAa,IACb,wBAAyB,IACzB,oBAAqB,IACrB,sBAAuB,IACvB,oBAAqB,IACrB,kBAAmB,IACnB,wBAAyB,IACzB,oBAAqB,IACrB,uBAAwB,IACxB,sBAAuB,IACvB,uBAAwB,IACxB,WAAc,IACd,MAAS,IACT,YAAa,IACb,sBAAuB,IACvB,oBAAqB,IACrB,4BAA6B,IAC7B,oBAAqB,IACrB,gBAAiB,IACjB,kBAAmB,IACnB,cAAe,IACf,eAAgB,IAChB,gBAAiB,IACjB,SAAY,IACZ,yBAA0B,IAC1B,kBAAmB,IACnB,cAAe,IACf,YAAa,IACb,KAAQ,IACR,mBAAoB,IACpB,gBAAiB,IACjB,wBAAyB,IACzB,UAAa,IACb,wBAAyB,IACzB,eAAgB,IAChB,0BAA2B,IAC3B,mBAAoB,IACpB,mBAAoB,IACpB,kBAAmB,IACnB,oBAAqB,IACrB,gBAAiB,IACjB,OAAU,IACV,gBAAiB,IACjB,YAAa,IACb,YAAa,IACb,QAAW,IACX,oBAAqB,IACrB,eAAgB,IAChB,gBAAiB,IACjB,iBAAkB,IAClB,mBAAoB,IACpB,gBAAiB,IACjB,gBAAiB,IACjB,uBAAwB,IACxB,sBAAuB,IACvB,uBAAwB,IACxB,uBAAwB,IACxB,mBAAoB,IACpB,SAAY,IACZ,uBAAwB,IACxB,qBAAsB,IACtB,sBAAuB,IACvB,cAAe,IACf,2BAA4B,IAC5B,YAAa,IACb,8BAA+B,IAC/B,iBAAkB,IAClB,0BAA2B,KC1HdC,MAxHf,WAAoB,IAAD,EAC6BpD,mBAAS,CACrD,CAAEV,KAAO,aAAcG,MAAO,IAC9B,CAAEH,KAAO,eAAgBG,MAAO,GAChC,CAAEH,KAAO,iBAAkBG,MAAO,KAJnB,mBACVL,EADU,KACOiE,EADP,OAMyBrD,oBAAS,GANlC,mBAMVsD,EANU,KAMKjE,EANL,OAOqBW,oBAAS,GAP9B,mBAOVuD,EAPU,KAOGV,EAPH,OAQW7C,mBAASwD,GARpB,mBAQVC,EARU,KAQFT,EARE,OASShD,mBAAS,MATlB,mBASV0D,EATU,KASHC,EATG,KAUXC,EAAW,yBAEXC,EAAiBC,OAAOC,KAAKZ,GAZlB,SAcFa,EAdE,8EAcjB,WAAyBN,GAAzB,SAAAO,EAAA,0DACMP,EADN,gCAEUA,EAAMQ,KAAK,wBAFrB,4CAdiB,kEAoBjB,sBAAAD,EAAA,2EAEIN,EAFJ,SAEmBQ,IAAmB,wBAFtC,gHAKIR,EALJ,UAKmBQ,IAAmBP,GALtC,0CAMQQ,OAAOC,WACTL,EAAUN,GAPhB,6EApBiB,sBAoCjB,SAASY,EAAapE,GACpB,OAAOA,EAAMqE,WAAW,GAAGC,UAAUzF,IAAI,KAAK0F,IAAI,GAGpD,SAASC,EAAYxE,GACnB,OAAOiE,IAASQ,eAAezE,EAAO,CA9BpB,IAAkB,MAiCtC,SAAS0E,EAAwBC,GAE/B,IADA,IAAMC,EAA4B,GACzBC,EAAI,EAAGA,EAAIF,EAAcG,OAAQD,IACxCD,EAA0BG,KAAK,CAC7BC,QAASrB,EAAekB,GACxBI,WAAYN,EAAcE,KAI9B,IAAMK,EAAUP,EAAcQ,QAAQ9F,KAAK+F,IAAL,MAAA/F,KAAI,YAAQsF,KAClDA,EAAcO,GAAW,EACzB,IAAMG,EAAgBV,EAAcQ,QAAQ9F,KAAK+F,IAAL,MAAA/F,KAAI,YAAQsF,KACxDA,EAAcU,GAAiB,EAC/B,IAAMC,EAAeX,EAAcQ,QAAQ9F,KAAK+F,IAAL,MAAA/F,KAAI,YAAQsF,KAEjDY,EAAqB,CACzB,CACEnG,KAAMwF,EAA0BM,GAASF,QACzCzF,MAAuD,IAAhDqF,EAA0BM,GAASD,YAE5C,CACE7F,KAAMwF,EAA0BS,GAAeL,QAC/CzF,MAA6D,IAAtDqF,EAA0BS,GAAeJ,YAElD,CACE7F,KAAMwF,EAA0BU,GAAcN,QAC9CzF,MAA4D,IAArDqF,EAA0BU,GAAcL,aAGnD9B,EAAmBoC,GAzCrBC,qBAAU,YAhCO,mCAiCfC,KACC,IA0CH,IAAMC,EAAQ,uCAAG,oCAAA3B,EAAA,0DACK,IAAhBV,IAAyBG,EADd,wBAEPxD,EAAQ,IAAI2F,OACZ5E,IAAMwC,EAHC,SAKLqC,EAAM3B,IAAW4B,WAAW7F,GAC5B8F,EAAetB,EAAYoB,GAC3BG,EAAe3B,EAAa0B,GAC5BE,EAAUxC,EAAMwC,QAAQD,GARnB,UASiBC,EAAQC,OATzB,QAUXvB,EAVW,QAWXvF,GAAiB,GAXN,kDAaXqD,MAAM,wDAbK,0DAAH,qDAyBd,OACE,eAACxD,EAAD,YACqB,IAAlBoE,EACC,cAAC,EAAD,CAASlE,gBAAiBA,EAAiBC,iBAAkBA,IAC7D,MACe,IAAhBkE,EACC,cAAC,EAAD,CAAaV,eAAgBA,EAAgBG,UAAWA,IACxD,qBAAKJ,UAAU,eAAf,SACE,qBAAK3B,IAAKwC,MAEd,sBAAKb,UAAU,YAAf,UACE,wBAAQ/C,QAAS,kBAjBjByD,GACFjE,GAAiB,GAEZwD,GAAe,IAclB,yBACA,wBAAQhD,QAAS,kBAAMR,GAAiB,IAAxC,wBACA,wBAAQQ,QAAS,kBAAM+F,KAAvB,6BCvGOQ,MAdf,WAME,OAJAV,qBAAU,WACRW,SAASC,MAAQ,kBAChB,IAGD,eAACzH,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QCFc0H,QACW,cAA7BnC,OAAOoC,SAASC,UAEe,UAA7BrC,OAAOoC,SAASC,UAEhBrC,OAAOoC,SAASC,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASkB,eAAe,SFoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBZ,MAAK,SAACa,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,YE/G5BrB,M","file":"static/js/main.8a28f791.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const PageWrap = styled.div`\r\n\tfont-size: 10px;   /*1rem = 10px*/\r\n  /* background-color: #FAFAFF; */\r\n  background-image: url('pexels-roberto-shumski-1903702.jpg');\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  min-height:100vh;\r\n  min-width: 100vw;\r\n  overflow-x: hidden;\r\n\r\n  color: #273469; \r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const HeaderWrap = styled.div`\r\n  padding: 1.4rem 0;\r\n  align-self: center;\r\n  flex-shrink: 2;\r\n  @media(min-width: 1024px) {\r\n    align-self: auto;\r\n  }\r\n\r\n  h1 {\r\n    margin-left: 1.4rem;\r\n    font-size: 2rem;\r\n    \r\n  }\r\n`;","import React from 'react';\r\nimport { HeaderWrap } from './HeaderStyles';\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n    <HeaderWrap>\r\n      <h1>PWA Birdifier</h1>\r\n    </HeaderWrap>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nexport const ContentWrap = styled.div`\r\n  /* flex: 1; */\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin: auto;\r\n  \r\n  div {\r\n    flex: 1;\r\n  }\r\n\r\n  @media(min-width: 1024px) {\r\n    width: 40rem;\r\n    margin:0 auto;\r\n  }\r\n\r\n  .currentImage {\r\n    display: flex;\r\n  }\r\n\r\n  .currentImage img {\r\n    height: auto;\r\n    min-width: 100%;\r\n    max-height: 350px;\r\n    width: auto;\r\n    align-self: flex-end;\r\n    border: 1px solid #273469;\r\n    border-bottom: none;\r\n  }\r\n\r\n  .btn-group {\r\n    flex-grow: 0;\r\n  }\r\n\r\n  .btn-group button {\r\n    width: 33.3%;\r\n    border: 1px solid #273469;\r\n    padding: 15px 24px; \r\n    @media(max-width: 350px) {\r\n      padding: 10px 10px;\r\n    }\r\n  }\r\n\r\n  .btn-group button:not(:last-child) {\r\n    border-right: none;\r\n  }\r\n\r\n  button, input > button {\r\n    background-color: #8884d8;\r\n    cursor: pointer;\r\n    color: #FAFAFF;\r\n    font-family: inherit;\r\n  }\r\n`;","export default __webpack_public_path__ + \"static/media/bald-eagle-preloaded-v2.8155ad7c.jpg\";","import styled from 'styled-components';\r\n\r\nexport const ContentWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100%;\r\n  width: 100%;\r\n  background-color: #273469;   \r\n  text-align: center;\r\n  align-items: center;\r\n  margin: 0;\r\n  \r\n\r\n  th, td, h2 {\r\n    color: #FAFAFF;\r\n  }\r\n  \r\n  table {\r\n    padding-bottom: 20px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  th, td {\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  button {\r\n    width: 100%;\r\n    padding: 15px 24px; \r\n  }\r\n\r\n  .closeBtn {\r\n    width: 100%;\r\n  }\r\n\r\n`;","\r\nimport React  from 'react';\r\nimport { ContentWrap } from './ResultsStyles';\r\n\r\nfunction Results({ classifications, setRenderResults }) {\r\n  return (\r\n    <ContentWrap>\r\n        <h2>Results</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Species</th>\r\n              <th>Detection Confidence / %</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{classifications[0].name}</td>\r\n              <td>{Math.round((classifications[0].value + Number.EPSILON) * 100) / 100}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>{classifications[1].name}</td>\r\n              <td>{Math.round((classifications[1].value + Number.EPSILON) * 100) / 100}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>{classifications[2].name}</td>\r\n              <td>{Math.round((classifications[2].value + Number.EPSILON) * 100) / 100}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div class=\"closeBtn\">\r\n          <button onClick={() => setRenderResults(false)}>Close</button>\r\n        </div>\r\n    </ContentWrap>\r\n  )\r\n};\r\n\r\nexport default Results;","export default __webpack_public_path__ + \"static/media/bald-eagle-preloaded-with-text.6e8412b5.jpg\";","import React, { useState, useRef } from \"react\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport preloadedImg from '../resources/bald-eagle-preloaded-with-text.jpg';\r\n\r\nfunction SelectImage(props) {\r\n  const [image, setImage] = useState(preloadedImg);\r\n  const [cropper, setCropper] = useState();\r\n  const fileInput = useRef(null);\r\n\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    let files;\r\n    if (e.dataTransfer) {\r\n      files = e.dataTransfer.files;\r\n    } else if (e.target) {\r\n      files = e.target.files;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      setImage(reader.result);\r\n    };\r\n    try {\r\n      reader.readAsDataURL(files[0]);\r\n    } catch (err) {\r\n      alert(\"Something went wrong with cropping. Try again!\");\r\n    }\r\n  };\r\n\r\n  const getCropData = () => {\r\n    if (image === '/static/media/bald-eagle-preloaded-with-text.6e8412b5.jpg') {\r\n      alert(\"Preloaded image cannot be cropped\");\r\n    } else if (typeof cropper !== \"undefined\") {\r\n      props.setImgSrc(cropper.getCroppedCanvas().toDataURL());\r\n      props.setSelectImage(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column'}}>\r\n      <Cropper\r\n        style={{ alignSelf: 'flex-end', minWidth: \"100%\", maxHeight: '350px', width: \"auto\", height: \"auto\"}}\r\n        initialAspectRatio={1}\r\n        src={image}\r\n        viewMode={1}\r\n        guides={true}\r\n        minCropBoxHeight={10}\r\n        minCropBoxWidth={10}\r\n        responsive={true}\r\n        background={false}\r\n        autoCropArea={1}\r\n        checkOrientation={false}\r\n        onInitialized={(instance) => {\r\n        setCropper(instance);\r\n        }}\r\n      />\r\n      <input style={{ display: 'none' }} ref={fileInput} type=\"file\" onChange={onChange} />\r\n      <div id=\"crop\" className=\"btn-group\">\r\n      <button onClick={() => props.setSelectImage(false)}>Cancel</button>\r\n      <button\r\n        onClick={() => fileInput.current.click()}\r\n      >Browse</button>\r\n        <button onClick={() => getCropData()}>Crop</button>\r\n      </div>\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nexport default SelectImage;\r\n","export const classes = {\r\n  'African Crowned Crane': 0,\r\n  'African Firefinch': 1,\r\n  'Albatross': 2,\r\n  'Alexandrine Parakeet': 3,\r\n  'American Avocet': 4,\r\n  'American Bittern': 5,\r\n  'American Coot': 6,\r\n  'American Goldfinch': 7,\r\n  'American Kestrel': 8,\r\n  'American Pipit': 9,\r\n  'American Redstart': 10,\r\n  'Anhinga': 11,\r\n  'Annas Hummingbird': 12,\r\n  'Antbird': 13,\r\n  'Araripe Manakin': 14,\r\n  'Asian Crested Ibis': 15,\r\n  'Bald Eagle': 16,\r\n  'Bali Starling': 17,\r\n  'Baltimore Oriole': 18,\r\n  'Bananaquit': 19,\r\n  'Banded Broadbill': 20,\r\n  'Bar-Tailed Godwit': 21,\r\n  'Barn Owl': 22,\r\n  'Barn Swallow': 23,\r\n  'Barred Puffbird': 24,\r\n  'Bay-Breasted Warbler': 25,\r\n  'Bearded Barbet': 26,\r\n  'Belted Kingfisher': 27,\r\n  'Bird Of Paradise': 28,\r\n  'Black Francolin': 29,\r\n  'Black Skimmer': 30,\r\n  'Black Swan': 31,\r\n  'Black Throated Warbler': 32,\r\n  'Black Vulture': 33,\r\n  'Black-Capped Chickadee': 34,\r\n  'Black-Necked Grebe': 35,\r\n  'Black-Throated Sparrow': 36,\r\n  'Blackburniam Warbler': 37,\r\n  'Blue Grouse': 38,\r\n  'Blue Heron': 39,\r\n  'Bobolink': 40,\r\n  'Brown Noody': 41,\r\n  'Brown Thrasher': 42,\r\n  'Cactus Wren': 43,\r\n  'California Condor': 44,\r\n  'California Gull': 45,\r\n  'California Quail': 46,\r\n  'Canary': 47,\r\n  'Cape May Warbler': 48,\r\n  'Capuchinbird': 49,\r\n  'Carmine Bee-Eater': 50,\r\n  'Caspian Tern': 51,\r\n  'Cassowary': 52,\r\n  'Chara De Collar': 53,\r\n  'Chipping Sparrow': 54,\r\n  'Chukar Partridge': 55,\r\n  'Cinnamon Teal': 56,\r\n  'Cock Of The  Rock': 57,\r\n  'Cockatoo': 58,\r\n  'Common Firecrest': 59,\r\n  'Common Grackle': 60,\r\n  'Common House Martin': 61,\r\n  'Common Loon': 62,\r\n  'Common Poorwill': 63,\r\n  'Common Starling': 64,\r\n  'Couchs Kingbird': 65,\r\n  'Crested Auklet': 66,\r\n  'Crested Caracara': 67,\r\n  'Crested Nuthatch': 68,\r\n  'Crow': 69,\r\n  'Crowned Pigeon': 70,\r\n  'Cuban Tody': 71,\r\n  'Curl Crested Aracuri': 72,\r\n  'D-Arnauds Barbet': 73,\r\n  'Dark Eyed Junco': 74,\r\n  'Downy Woodpecker': 75,\r\n  'Eastern Bluebird': 76,\r\n  'Eastern Meadowlark': 77,\r\n  'Eastern Rosella': 78,\r\n  'Eastern Towee': 79,\r\n  'Elegant Trogon': 80,\r\n  'Elliots  Pheasant': 81,\r\n  'Emperor Penguin': 82,\r\n  'Emu': 83,\r\n  'Eurasian Golden Oriole': 84,\r\n  'Eurasian Magpie': 85,\r\n  'Evening Grosbeak': 86,\r\n  'Fire Tailled Myzornis': 87,\r\n  'Flame Tanager': 88,\r\n  'Flamingo': 89,\r\n  'Frigate': 90,\r\n  'Gambels Quail': 91,\r\n  'Gila Woodpecker': 92,\r\n  'Gilded Flicker': 93,\r\n  'Glossy Ibis': 94,\r\n  'Go Away Bird': 95,\r\n  'Gold Wing Warbler': 96,\r\n  'Golden Cheeked Warbler': 97,\r\n  'Golden Chlorophonia': 98,\r\n  'Golden Eagle': 99,\r\n  'Golden Pheasant': 100,\r\n  'Golden Pipit': 101,\r\n  'Gouldian Finch': 102,\r\n  'Gray Catbird': 103,\r\n  'Gray Partridge': 104,\r\n  'Great Potoo': 105,\r\n  'Greator Sage Grouse': 106,\r\n  'Green Jay': 107,\r\n  'Grey Plover': 108,\r\n  'Guinea Turaco': 109,\r\n  'Guineafowl': 110,\r\n  'Gyrfalcon': 111,\r\n  'Harpy Eagle': 112,\r\n  'Hawaiian Goose': 113,\r\n  'Helmet Vanga': 114,\r\n  'Hoatzin': 115,\r\n  'Hooded Merganser': 116,\r\n  'Hoopoes': 117,\r\n  'Hornbill': 118,\r\n  'Horned Guan': 119,\r\n  'Horned Sungem': 120,\r\n  'House Finch': 121,\r\n  'House Sparrow': 122,\r\n  'Imperial Shaq': 123,\r\n  'Inca Tern': 124,\r\n  'Indian Bustard': 125,\r\n  'Indian Pitta': 126,\r\n  'Indigo Bunting': 127,\r\n  'Jabiru': 128,\r\n  'Java Sparrow': 129,\r\n  'Javan Magpie': 130,\r\n  'Kakapo': 131,\r\n  'Killdear': 132,\r\n  'King Vulture': 133,\r\n  'Kiwi': 134,\r\n  'Kookaburra': 135,\r\n  'Lark Bunting': 136,\r\n  'Lears Macaw': 137,\r\n  'Lilac Roller': 138,\r\n  'Long-Eared Owl': 139,\r\n  'Malabar Hornbill': 140,\r\n  'Malachite Kingfisher': 141,\r\n  'Maleo': 142,\r\n  'Mallard Duck': 143,\r\n  'Mandrin Duck': 144,\r\n  'Marabou Stork': 145,\r\n  'Masked Booby': 146,\r\n  'Masked Lapwing': 147,\r\n  'Mikado  Pheasant': 148,\r\n  'Mourning Dove': 149,\r\n  'Myna': 150,\r\n  'Nicobar Pigeon': 151,\r\n  'Northern Bald Ibis': 152,\r\n  'Northern Cardinal': 153,\r\n  'Northern Flicker': 154,\r\n  'Northern Gannet': 155,\r\n  'Northern Goshawk': 156,\r\n  'Northern Jacana': 157,\r\n  'Northern Mockingbird': 158,\r\n  'Northern Parula': 159,\r\n  'Northern Red Bishop': 160,\r\n  'Ocellated Turkey': 161,\r\n  'Okinawa Rail': 162,\r\n  'Osprey': 163,\r\n  'Ostrich': 164,\r\n  'Oyster Catcher': 165,\r\n  'Painted Buntig': 166,\r\n  'Palila': 167,\r\n  'Paradise Tanager': 168,\r\n  'Parus Major': 169,\r\n  'Peacock': 170,\r\n  'Pelican': 171,\r\n  'Peregrine Falcon': 172,\r\n  'Philippine Eagle': 173,\r\n  'Pink Robin': 174,\r\n  'Puffin': 175,\r\n  'Purple Finch': 176,\r\n  'Purple Gallinule': 177,\r\n  'Purple Martin': 178,\r\n  'Purple Swamphen': 179,\r\n  'Quetzal': 180,\r\n  'Rainbow Lorikeet': 181,\r\n  'Razorbill': 182,\r\n  'Red Bearded Bee Eater': 183,\r\n  'Red Bellied Pitta': 184,\r\n  'Red Faced Cormorant': 185,\r\n  'Red Faced Warbler': 186,\r\n  'Red Headed Duck': 187,\r\n  'Red Headed Woodpecker': 188,\r\n  'Red Honey Creeper': 189,\r\n  'Red Winged Blackbird': 190,\r\n  'Red Wiskered Bulbul': 191,\r\n  'Ring-Necked Pheasant': 192,\r\n  'Roadrunner': 193,\r\n  'Robin': 194,\r\n  'Rock Dove': 195,\r\n  'Rosy Faced Lovebird': 196,\r\n  'Rough Leg Buzzard': 197,\r\n  'Ruby Throated Hummingbird': 198,\r\n  'Rufous Kingfisher': 199,\r\n  'Rufuos Motmot': 200,\r\n  'Samatran Thrush': 201,\r\n  'Sand Martin': 202,\r\n  'Scarlet Ibis': 203,\r\n  'Scarlet Macaw': 204,\r\n  'Shoebill': 205,\r\n  'Short Billed Dowitcher': 206,\r\n  'Smiths Longspur': 207,\r\n  'Snowy Egret': 208,\r\n  'Snowy Owl': 209,\r\n  'Sora': 210,\r\n  'Spangled Cotinga': 211,\r\n  'Splendid Wren': 212,\r\n  'Spoon Biled Sandpiper': 213,\r\n  'Spoonbill': 214,\r\n  'Sri Lanka Blue Magpie': 215,\r\n  'Steamer Duck': 216,\r\n  'Stork Billed Kingfisher': 217,\r\n  'Strawberry Finch': 218,\r\n  'Stripped Swallow': 219,\r\n  'Superb Starling': 220,\r\n  'Swinhoes Pheasant': 221,\r\n  'Taiwan Magpie': 222,\r\n  'Takahe': 223,\r\n  'Tasmanian Hen': 224,\r\n  'Teal Duck': 225,\r\n  'Tit Mouse': 226,\r\n  'Touchan': 227,\r\n  'Townsends Warbler': 228,\r\n  'Tree Swallow': 229,\r\n  'Trumpter Swan': 230,\r\n  'Turkey Vulture': 231,\r\n  'Turquoise Motmot': 232,\r\n  'Umbrella Bird': 233,\r\n  'Varied Thrush': 234,\r\n  'Venezuelian Troupial': 235,\r\n  'Vermilion Flycather': 236,\r\n  'Violet Green Swallow': 237,\r\n  'Vulturine Guineafowl': 238,\r\n  'Wattled Curassow': 239,\r\n  'Whimbrel': 240,\r\n  'White Cheeked Turaco': 241,\r\n  'White Necked Raven': 242,\r\n  'White Tailed Tropic': 243,\r\n  'Wild Turkey': 244,\r\n  'Wilsons Bird Of Paradise': 245,\r\n  'Wood Duck': 246,\r\n  'Yellow Bellied Flowerpecker': 247,\r\n  'Yellow Cacique': 248,\r\n  'Yellow Headed Blackbird': 249\r\n};","import React, { useState, useEffect } from 'react';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport { ContentWrap } from './ContentStyles';\r\nimport preloadedImgSrc from '../resources/bald-eagle-preloaded-v2.jpg';\r\nimport Results from './Results';\r\nimport SelectImage from './SelectImage';\r\nimport { classes } from '../resources/classes'\r\n\r\nfunction Content() {\r\n  const [classifications, setClassifications] = useState([\r\n    { name:  'Bald Eagle', value: 90 },\r\n    { name:  'Golden Eagle', value: 7 },\r\n    { name:  'Turkey Vulture', value: 3 },\r\n  ]);\r\n  const [renderResults, setRenderResults] = useState(false);\r\n  const [selectImage, setSelectImage] = useState(false);\r\n  const [imgSrc, setImgSrc] = useState(preloadedImgSrc);\r\n  const [model, setModel] = useState(null);\r\n  const modelDir = '/tfjs_files/model.json';\r\n  const pixelHeight = 224, pixelWidth = 224;\r\n  const classesSpecies = Object.keys(classes);\r\n\r\n  async function saveModel(model) {\r\n    if (model) {\r\n      await model.save('indexeddb://my-model');\r\n    }\r\n  }\r\n\r\n  async function loadModel() {\r\n    try {\r\n      setModel(await tf.loadLayersModel('indexeddb://my-model'));\r\n    } catch (error) {\r\n    } finally {\r\n      setModel(await tf.loadLayersModel(modelDir));\r\n      if (window.indexedDB ) {\r\n        saveModel(model)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadModel();\r\n  }, []);\r\n\r\n  function rescaleImage(image) {\r\n    return image.expandDims(0).toFloat().div(127).sub(1);\r\n  }\r\n\r\n  function resizeImage(image) {\r\n    return tf.image.resizeBilinear(image, [pixelHeight, pixelWidth]);\r\n  }\r\n\r\n  function setThreeBestPredictions(probabilities) {\r\n    const mapProbabilitiesToSpecies = [];\r\n    for (let i = 0; i < probabilities.length; i++) {\r\n      mapProbabilitiesToSpecies.push({\r\n        species: classesSpecies[i],\r\n        prediction: probabilities[i]\r\n      })\r\n    };\r\n    \r\n    const highest = probabilities.indexOf(Math.max(...probabilities));\r\n    probabilities[highest] = 0;\r\n    const secondHighest = probabilities.indexOf(Math.max(...probabilities));\r\n    probabilities[secondHighest] = 0;\r\n    const thirdHighest = probabilities.indexOf(Math.max(...probabilities));\r\n    \r\n    const newClassifications = [\r\n      {\r\n        name: mapProbabilitiesToSpecies[highest].species,\r\n        value: mapProbabilitiesToSpecies[highest].prediction * 100\r\n      },\r\n      {\r\n        name: mapProbabilitiesToSpecies[secondHighest].species,\r\n        value: mapProbabilitiesToSpecies[secondHighest].prediction * 100\r\n      },\r\n      {\r\n        name: mapProbabilitiesToSpecies[thirdHighest].species,\r\n        value: mapProbabilitiesToSpecies[thirdHighest].prediction * 100\r\n      },\r\n    ];\r\n    setClassifications(newClassifications);\r\n  }\r\n\r\n  const classify = async() => {\r\n    if (selectImage === false && model) {\r\n      const image = new Image();\r\n      image.src = imgSrc;\r\n      try {\r\n        const img = tf.browser.fromPixels(image);\r\n        const resizedImage = resizeImage(img);\r\n        const batchedImage = rescaleImage(resizedImage);\r\n        const predict = model.predict(batchedImage);\r\n        const probabilities = await predict.data();\r\n        setThreeBestPredictions(probabilities);\r\n        setRenderResults(true);\r\n      } catch (e) {\r\n        alert(\"Something went wrong with classification. Try again!\")\r\n      }\r\n    }\r\n  };\r\n\r\n  const selectImageOnClick = () => {\r\n    if (renderResults) {\r\n      setRenderResults(false);\r\n    }\r\n    return setSelectImage(true);\r\n  }\r\n\r\n  return (\r\n    <ContentWrap>\r\n      {renderResults === true ?\r\n        <Results classifications={classifications} setRenderResults={setRenderResults}/>\r\n      : null}\r\n      {selectImage === true ?\r\n        <SelectImage setSelectImage={setSelectImage} setImgSrc={setImgSrc}/>\r\n      : <div className=\"currentImage\">\r\n          <img src={imgSrc}></img>\r\n        </div>}\r\n      <div className=\"btn-group\">\r\n        <button onClick={() => selectImageOnClick()}>Select File</button>\r\n        <button onClick={() => setRenderResults(false)}>Take Photo</button>\r\n        <button onClick={() => classify()}>Classify</button>\r\n      </div>\r\n    </ContentWrap>\r\n  );\r\n}\r\n\r\nexport default Content;","import React, { useEffect } from 'react';\r\nimport { PageWrap } from './AppStyles';\r\nimport Header from './components/header/Header';\r\nimport Content from './components/content/Content';\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    document.title = \"PWA Birdifier\"\r\n  }, []);\r\n\r\n  return (\r\n    <PageWrap>\r\n      <Header/>\r\n      <Content/>\r\n    </PageWrap>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}